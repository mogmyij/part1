{"ast":null,"code":"var _jsxFileName = \"/home/mogmyij/Projects/fullStackWebDev/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  const increaseState = (state, setState) => {\n    let newState = state + 1;\n    setState(newState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => increaseState(props.state, props.setState),\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\n\nconst StatLine = _ref => {\n  let {\n    text,\n    value\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [text, value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 32\n  }, this);\n};\n\n_c2 = StatLine;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  firstTime = good + neutral + bad == 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"FeedBack\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      state: good,\n      setState: setGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      state: neutral,\n      setState: setNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      state: bad,\n      setState: setBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), firstTime ? /*#__PURE__*/_jsxDEV(\"body\", {\n      children: [/*#__PURE__*/_jsxDEV(StatLine, {\n        text: \"good: \",\n        value: good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatLine, {\n        text: \"neutral: \",\n        value: neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatLine, {\n        text: \"bad: \",\n        value: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatLine, {\n        text: \"all: \",\n        value: good + neutral + bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatLine, {\n        text: \"average\",\n        value: (good - bad) / (good + neutral + bad)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatLine, {\n        text: \"Percentage good:\",\n        value: good / (good + neutral + bad) * 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 6\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No stats available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StatLine\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useState","Button","props","increaseState","state","setState","newState","text","StatLine","value","App","good","setGood","neutral","setNeutral","bad","setBad","firstTime"],"sources":["/home/mogmyij/Projects/fullStackWebDev/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button=(props)=>{\n  \n  const increaseState=(state, setState)=>{\n    let newState=state+1\n    setState(newState)\n  } \n\n  return(\n    <button onClick={()=>increaseState(props.state,props.setState)}>{props.text}</button>\n  )\n}\n\nconst StatLine=({text,value})=><p>{text}{value}</p>\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  firstTime = (good+neutral+bad)==0\n  return (\n    <div>\n    <h1>FeedBack</h1>\n    <Button state={good} setState={setGood} text=\"good\"/>\n    <Button state={neutral} setState={setNeutral} text=\"neutral\"/>\n    <Button state={bad} setState={setBad} text=\"bad\"/>\n    <h1>Stats</h1>\n    {firstTime\n    ?<body>\n      <StatLine text=\"good: \" value={good}/>\n      <StatLine text=\"neutral: \" value={neutral}/>\n      <StatLine text=\"bad: \" value={bad}/>\n      <StatLine text=\"all: \" value={good+neutral+bad}/>\n      <StatLine text=\"average\" value={(good-bad)/(good+neutral+bad)}/>\n      <StatLine text=\"Percentage good:\" value={(good/(good+neutral+bad))*100}/>\n    </body>\n    :<p>No stats available</p>\n    }\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,MAAM,GAAEC,KAAD,IAAS;EAEpB,MAAMC,aAAa,GAAC,CAACC,KAAD,EAAQC,QAAR,KAAmB;IACrC,IAAIC,QAAQ,GAACF,KAAK,GAAC,CAAnB;IACAC,QAAQ,CAACC,QAAD,CAAR;EACD,CAHD;;EAKA,oBACE;IAAQ,OAAO,EAAE,MAAIH,aAAa,CAACD,KAAK,CAACE,KAAP,EAAaF,KAAK,CAACG,QAAnB,CAAlC;IAAA,UAAiEH,KAAK,CAACK;EAAvE;IAAA;IAAA;IAAA;EAAA,QADF;AAGD,CAVD;;KAAMN,M;;AAYN,MAAMO,QAAQ,GAAC;EAAA,IAAC;IAACD,IAAD;IAAME;EAAN,CAAD;EAAA,oBAAgB;IAAA,WAAIF,IAAJ,EAAUE,KAAV;EAAA;IAAA;IAAA;IAAA;EAAA,QAAhB;AAAA,CAAf;;MAAMD,Q;;AAEN,MAAME,GAAG,GAAG,MAAM;EAAA;;EAChB;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,CAAD,CAAtC;EACA,MAAM,CAACe,GAAD,EAAMC,MAAN,IAAgBhB,QAAQ,CAAC,CAAD,CAA9B;EACAiB,SAAS,GAAIN,IAAI,GAACE,OAAL,GAAaE,GAAd,IAAoB,CAAhC;EACA,oBACE;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA,QAAC,MAAD;MAAQ,KAAK,EAAEJ,IAAf;MAAqB,QAAQ,EAAEC,OAA/B;MAAwC,IAAI,EAAC;IAA7C;MAAA;MAAA;MAAA;IAAA,QAFA,eAGA,QAAC,MAAD;MAAQ,KAAK,EAAEC,OAAf;MAAwB,QAAQ,EAAEC,UAAlC;MAA8C,IAAI,EAAC;IAAnD;MAAA;MAAA;MAAA;IAAA,QAHA,eAIA,QAAC,MAAD;MAAQ,KAAK,EAAEC,GAAf;MAAoB,QAAQ,EAAEC,MAA9B;MAAsC,IAAI,EAAC;IAA3C;MAAA;MAAA;MAAA;IAAA,QAJA,eAKA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALA,EAMCC,SAAS,gBACT;MAAA,wBACC,QAAC,QAAD;QAAU,IAAI,EAAC,QAAf;QAAwB,KAAK,EAAEN;MAA/B;QAAA;QAAA;QAAA;MAAA,QADD,eAEC,QAAC,QAAD;QAAU,IAAI,EAAC,WAAf;QAA2B,KAAK,EAAEE;MAAlC;QAAA;QAAA;QAAA;MAAA,QAFD,eAGC,QAAC,QAAD;QAAU,IAAI,EAAC,OAAf;QAAuB,KAAK,EAAEE;MAA9B;QAAA;QAAA;QAAA;MAAA,QAHD,eAIC,QAAC,QAAD;QAAU,IAAI,EAAC,OAAf;QAAuB,KAAK,EAAEJ,IAAI,GAACE,OAAL,GAAaE;MAA3C;QAAA;QAAA;QAAA;MAAA,QAJD,eAKC,QAAC,QAAD;QAAU,IAAI,EAAC,SAAf;QAAyB,KAAK,EAAE,CAACJ,IAAI,GAACI,GAAN,KAAYJ,IAAI,GAACE,OAAL,GAAaE,GAAzB;MAAhC;QAAA;QAAA;QAAA;MAAA,QALD,eAMC,QAAC,QAAD;QAAU,IAAI,EAAC,kBAAf;QAAkC,KAAK,EAAGJ,IAAI,IAAEA,IAAI,GAACE,OAAL,GAAaE,GAAf,CAAL,GAA0B;MAAnE;QAAA;QAAA;QAAA;MAAA,QAND;IAAA;MAAA;MAAA;MAAA;IAAA,QADS,gBAST;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAfD;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD,CA1BD;;GAAML,G;;MAAAA,G;AA4BN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}